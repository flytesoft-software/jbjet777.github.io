"use strict";class AnimateWorker{constructor(){function e(e){s=new EclipseData(JSON.parse(e))}function t(e){var t=new EclipseData(JSON.parse(e.eclipse)),a=parseInt(e.dateOffset),r=null,s=null,o=t.getPenumbraStartTime(),i=t.getPenumbraEndTime(),n=!1,l=null;if("Annular"!==t.type&&"Total"!==t.type&&"Hybrid"!==t.type||(n=!0),n)var c=t.getUmbraStartTime(),d=t.getUmbraEndTime();for(isNaN(a)&&(a=0);go;)(l=new Date).setTime(l.getTime()+a),l>=o&&l<=i&&(r=t.drawPenumbraShadow(l)),n&&l.getTime()>=c&&l.getTime()<=d&&(s=t.drawUmbraShadow(l)),postMessage({cmd:"shadow_done",pen_shadow:JSON.stringify(r),umb_shadow:JSON.stringify(s),date:l.toUTCString()});go=!0}function a(e){if(e){for(var t=[],a=1;a<e.length;a++){t.push(e[a-1]);for(var r=new arc.GreatCircle({x:e[a-1].longitude,y:e[a-1].latitude},{x:e[a].longitude,y:e[a].latitude}).Arc(50,{offset:10}),s=0;s<r.geometries.length;s++)for(var o=0;o<r.geometries[s].coords.length;o++)t.push(new PositionObj(r.geometries[s].coords[o][1],r.geometries[s].coords[o][0]))}return t}return null}function r(e){var t=parseFloat(e),r=a(s.drawPenumbraShadow(t));postMessage({cmd:"shadow_done",pen_shadow:JSON.stringify(r)})}importScripts("SolarElevation.js"),importScripts("EclipseCalc.js"),importScripts("arc.js");var s=null;self.addEventListener("message",a=>{var s=a.data;switch(s.cmd){case"eclipse":e(s.eclipse);break;case"shadow":r(s.time);break;case"real":t(s.time);break;default:console.log("ANIMATE WORKER: Unkown command sent to worker.")}},!1)}}(()=>{console.log("ANIMATE WORKER: Initialized.");new AnimateWorker})();